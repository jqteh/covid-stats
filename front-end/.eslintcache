[{"/Users/jyequanteh/Projects/covid-stats/front-end/src/index.js":"1","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/App.js":"2","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Header.js":"3","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Footer.js":"4","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/LatestCovid.js":"5","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Panel.js":"6","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/VacRate.js":"7","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/InfRate.js":"8","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Hospital.js":"9","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/SidebarContent.js":"10","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/SliderComponent.js":"11","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/RadioPanel.js":"12","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Region.js":"13","/Users/jyequanteh/Projects/covid-stats/front-end/src/postcode-areas.js":"14","/Users/jyequanteh/Projects/covid-stats/front-end/src/critical_care_occupancy.js":"15","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/VacGraph.js":"16"},{"size":423,"mtime":1611406847533,"results":"17","hashOfConfig":"18"},{"size":1530,"mtime":1611446744882,"results":"19","hashOfConfig":"18"},{"size":905,"mtime":1611430265731,"results":"20","hashOfConfig":"18"},{"size":205,"mtime":1611407821960,"results":"21","hashOfConfig":"18"},{"size":1633,"mtime":1611413946595,"results":"22","hashOfConfig":"18"},{"size":134,"mtime":1611418184190,"results":"23","hashOfConfig":"18"},{"size":460,"mtime":1611449763493,"results":"24","hashOfConfig":"18"},{"size":485,"mtime":1611449735149,"results":"25","hashOfConfig":"18"},{"size":951,"mtime":1611446598255,"results":"26","hashOfConfig":"18"},{"size":2042,"mtime":1611443487821,"results":"27","hashOfConfig":"18"},{"size":1516,"mtime":1611437466671,"results":"28","hashOfConfig":"18"},{"size":1548,"mtime":1611436855944,"results":"29","hashOfConfig":"18"},{"size":762,"mtime":1611443042504,"results":"30","hashOfConfig":"18"},{"size":12557,"mtime":1611440348922,"results":"31","hashOfConfig":"18"},{"size":4909,"mtime":1611445952592,"results":"32","hashOfConfig":"18"},{"size":2320,"mtime":1611449925048,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"psl7se",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jyequanteh/Projects/covid-stats/front-end/src/index.js",[],["72","73"],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/App.js",["74","75"],"import React, { useState } from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport LatestCovid from './LatestCovid' //Console logs the latest Covid data from coronavirus.data.gov.uk (England for now)\nimport VacRate from './VacRate';\nimport InfRate from './InfRate';\nimport Hospital from './Hospital';\nimport Sidebar from \"react-sidebar\";\nimport SidebarContent from './SidebarContent';\n\nfunction App() {\n\n  const [sideBarOpen, setSideBarOpen] = useState(false);\n  const [region, setRegion] = useState(\"East of England\");\n  const [bigRegion, setBigRegion] = useState(\"East of England\")\n\n  function showPanel() {\n    setSideBarOpen(true);\n  }\n\n  function closePanel() {\n    setSideBarOpen(false);\n  }\n\n  function changeRegion(place) {\n    setRegion(place);\n  }\n\n  return (\n    <div className=\"App\">\n        <Sidebar\n          sidebar={<SidebarContent onPress={closePanel} onChangeRegion={changeRegion}/>}\n          open={sideBarOpen}\n          styles={{ sidebar: { background: \"#1F1B2E\" } }}\n          pullRight={true}\n        />\n      <Header onPress={showPanel} />\n      <div className=\"panel-box\">\n        <VacRate region={region}/>\n        <InfRate region={region}/>\n        <Hospital \n          region={bigRegion}\n        />\n      </div>\n      <div className=\"risk-box\">\n        <h2 className=\"infection-risk-text\">Your current risk of infection is:</h2>\n        <h1 className=\"infection-risk\">X%</h1>\n      </div>\n      {/* <LatestCovid/>  */}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Header.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Footer.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/LatestCovid.js",["76","77"],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios';\n\nexport default function LatestCovid() {\n\n    const getData = async ( queries ) => {\n        const endpoint = 'https://api.coronavirus.data.gov.uk/v1/data';\n        const { data, status, statusText } = await axios.get(endpoint, { \n            params: queries,\n            timeout: 10000 \n        });\n        if ( status >= 400 )\n            throw new Error(statusText);\n        return data\n    };  // getData\n    \n    \n    const latestCovid = async () => {\n        const\n            AreaType = \"nation\",\n            AreaName = \"england\";\n        const\n            filters = [\n                `areaType=${ AreaType }`,\n                `areaName=${ AreaName }`\n            ],\n            structure = {\n                date: \"date\",\n                name: \"areaName\",\n                code: \"areaCode\",\n                cases: {\n                    new: \"newCasesByPublishDate\",\n                    cumulative: \"cumCasesByPublishDate\"\n                },\n                deaths: {\n                    new: \"newDeathsByDeathDate\",\n                    cumulative: \"cumDeathsByDeathDate\"\n                }\n            };\n        const\n            apiParams = {\n                filters: filters.join(\";\"),\n                structure: JSON.stringify(structure),\n            };\n    \n        const result = await getData(apiParams);\n    \n        const latestResult = result[\"data\"][1];\n    \n        console.log(JSON.stringify(latestResult));\n    \n    };  // main\n\n    return (\n        <div>\n            <button onClick={latestCovid}>Fetch</button>\n\n        </div>\n    )\n}\n","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Panel.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/VacRate.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/InfRate.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Hospital.js",["78","79"],"import React, {useState} from 'react';\nimport HospitalLogo from '../assets/hospital.png';\nimport bedOccupancy from '../critical_care_occupancy';\n\nexport default function Hospital(props) {\n\n    const [occupied, setOccupied] = useState(bedOccupancy[0].EastofEngland.slice(-1)[0].Occupied) // Default is East of England\n    const [available, setAvailable] = useState(bedOccupancy[0].EastofEngland.slice(-1)[0].Unoccupied) // Default is East of England\n\n    const capacity = Math.round((occupied - available)/occupied*100)\n\n\n    return (\n        <div className=\"panel\">\n            <div className=\"hospital\">\n                <img src={HospitalLogo} alt=\"\"/>\n                <h3>Critical care services in {props.region} hospitals are running at</h3>\n                <h1>{capacity}%</h1>\n                <h3>capacity.</h3>\n                <p>This means there might not be enough beds for you if you fall ill. </p>\n            </div>\n\n        </div>\n    )\n}\n","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/SidebarContent.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/SliderComponent.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/RadioPanel.js",["80","81"],"import React, { useState } from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\nexport default function RadioPanel(props) {\n\n    const [selectedValue, setSelectedValue] = useState(\"0\");\n\n    const handleChange = (event) => {\n        const newValue = event.target.value\n        setSelectedValue(newValue);\n        props.endValue(newValue);\n    };\n\n    return (\n        <FormControl component=\"fieldset\">\n            <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\">\n                <FormControlLabel\n                    value=\"0\"\n                    control={<Radio color=\"primary\" />}\n                    label=\"0\"\n                    labelPlacement=\"top\"\n                    onChange={handleChange}\n                />\n                <FormControlLabel\n                    value=\"1\"\n                    control={<Radio color=\"primary\" />}\n                    label=\"1\"\n                    labelPlacement=\"top\"\n                    onChange={handleChange}\n                />\n                <FormControlLabel\n                    value=\"2\"\n                    control={<Radio color=\"primary\" />}\n                    label=\"2\"\n                    labelPlacement=\"top\"\n                    onChange={handleChange}\n                />\n            </RadioGroup>\n        </FormControl>\n    )\n}\n","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Region.js",["82"],"import React, {useState} from 'react';\nimport postCodeAreas from '../postcode-areas';\n\nexport default function Region(props) {\n\n    const [postCode, setPostCode] = useState(null)\n    const [region, setRegion] = useState(\"Cambridge\")\n\n    function handleChange(event) {\n        const value = event.target.value;\n        setPostCode(value);\n        postCodeAreas.forEach( obj => {\n            if (value === obj.postcodeArea) {\n                setRegion(obj.region)\n                props.endValue(obj.region);\n            } \n        })\n    }\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                value={postCode}\n                onChange={handleChange}\n                className=\"postcode\"\n            />\n        </div>\n    )\n}\n","/Users/jyequanteh/Projects/covid-stats/front-end/src/postcode-areas.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/critical_care_occupancy.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/VacGraph.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":19},{"ruleId":"87","severity":1,"message":"91","line":15,"column":21,"nodeType":"89","messageId":"90","endLine":15,"endColumn":33},{"ruleId":"87","severity":1,"message":"92","line":1,"column":16,"nodeType":"89","messageId":"90","endLine":1,"endColumn":24},{"ruleId":"87","severity":1,"message":"93","line":1,"column":26,"nodeType":"89","messageId":"90","endLine":1,"endColumn":35},{"ruleId":"87","severity":1,"message":"94","line":7,"column":22,"nodeType":"89","messageId":"90","endLine":7,"endColumn":33},{"ruleId":"87","severity":1,"message":"95","line":8,"column":23,"nodeType":"89","messageId":"90","endLine":8,"endColumn":35},{"ruleId":"87","severity":1,"message":"96","line":6,"column":8,"nodeType":"89","messageId":"90","endLine":6,"endColumn":17},{"ruleId":"87","severity":1,"message":"97","line":11,"column":12,"nodeType":"89","messageId":"90","endLine":11,"endColumn":25},{"ruleId":"87","severity":1,"message":"98","line":7,"column":12,"nodeType":"89","messageId":"90","endLine":7,"endColumn":18},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'LatestCovid' is defined but never used.","Identifier","unusedVar","'setBigRegion' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'setOccupied' is assigned a value but never used.","'setAvailable' is assigned a value but never used.","'FormLabel' is defined but never used.","'selectedValue' is assigned a value but never used.","'region' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]