[{"/Users/jyequanteh/Projects/covid-stats/front-end/src/index.js":"1","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/App.js":"2","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Header.js":"3","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Footer.js":"4","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/LatestCovid.js":"5","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Panel.js":"6","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/VacRate.js":"7","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/InfRate.js":"8","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Hospital.js":"9","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/SidebarContent.js":"10","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/SliderComponent.js":"11","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/RadioPanel.js":"12","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Region.js":"13","/Users/jyequanteh/Projects/covid-stats/front-end/src/postcode-areas.js":"14","/Users/jyequanteh/Projects/covid-stats/front-end/src/critical_care_occupancy.js":"15","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/VacGraph.js":"16"},{"size":423,"mtime":1611406847533,"results":"17","hashOfConfig":"18"},{"size":1536,"mtime":1611455689802,"results":"19","hashOfConfig":"18"},{"size":905,"mtime":1611430265731,"results":"20","hashOfConfig":"18"},{"size":205,"mtime":1611407821960,"results":"21","hashOfConfig":"18"},{"size":1633,"mtime":1611413946595,"results":"22","hashOfConfig":"18"},{"size":134,"mtime":1611418184190,"results":"23","hashOfConfig":"18"},{"size":458,"mtime":1611453063225,"results":"24","hashOfConfig":"18"},{"size":485,"mtime":1611449735149,"results":"25","hashOfConfig":"18"},{"size":1426,"mtime":1611458274282,"results":"26","hashOfConfig":"18"},{"size":2042,"mtime":1611443487821,"results":"27","hashOfConfig":"18"},{"size":1516,"mtime":1611437466671,"results":"28","hashOfConfig":"18"},{"size":1548,"mtime":1611436855944,"results":"29","hashOfConfig":"18"},{"size":762,"mtime":1611443042504,"results":"30","hashOfConfig":"18"},{"size":12561,"mtime":1611453543491,"results":"31","hashOfConfig":"18"},{"size":4903,"mtime":1611453446643,"results":"32","hashOfConfig":"18"},{"size":2320,"mtime":1611449925048,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"psl7se",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jyequanteh/Projects/covid-stats/front-end/src/index.js",[],["70","71"],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/App.js",["72"],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Header.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Footer.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/LatestCovid.js",["73","74"],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios';\n\nexport default function LatestCovid() {\n\n    const getData = async ( queries ) => {\n        const endpoint = 'https://api.coronavirus.data.gov.uk/v1/data';\n        const { data, status, statusText } = await axios.get(endpoint, { \n            params: queries,\n            timeout: 10000 \n        });\n        if ( status >= 400 )\n            throw new Error(statusText);\n        return data\n    };  // getData\n    \n    \n    const latestCovid = async () => {\n        const\n            AreaType = \"nation\",\n            AreaName = \"england\";\n        const\n            filters = [\n                `areaType=${ AreaType }`,\n                `areaName=${ AreaName }`\n            ],\n            structure = {\n                date: \"date\",\n                name: \"areaName\",\n                code: \"areaCode\",\n                cases: {\n                    new: \"newCasesByPublishDate\",\n                    cumulative: \"cumCasesByPublishDate\"\n                },\n                deaths: {\n                    new: \"newDeathsByDeathDate\",\n                    cumulative: \"cumDeathsByDeathDate\"\n                }\n            };\n        const\n            apiParams = {\n                filters: filters.join(\";\"),\n                structure: JSON.stringify(structure),\n            };\n    \n        const result = await getData(apiParams);\n    \n        const latestResult = result[\"data\"][1];\n    \n        console.log(JSON.stringify(latestResult));\n    \n    };  // main\n\n    return (\n        <div>\n            <button onClick={latestCovid}>Fetch</button>\n\n        </div>\n    )\n}\n","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Panel.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/VacRate.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/InfRate.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Hospital.js",["75","76"],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/SidebarContent.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/SliderComponent.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/RadioPanel.js",["77","78"],"import React, { useState } from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\nexport default function RadioPanel(props) {\n\n    const [selectedValue, setSelectedValue] = useState(\"0\");\n\n    const handleChange = (event) => {\n        const newValue = event.target.value\n        setSelectedValue(newValue);\n        props.endValue(newValue);\n    };\n\n    return (\n        <FormControl component=\"fieldset\">\n            <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\">\n                <FormControlLabel\n                    value=\"0\"\n                    control={<Radio color=\"primary\" />}\n                    label=\"0\"\n                    labelPlacement=\"top\"\n                    onChange={handleChange}\n                />\n                <FormControlLabel\n                    value=\"1\"\n                    control={<Radio color=\"primary\" />}\n                    label=\"1\"\n                    labelPlacement=\"top\"\n                    onChange={handleChange}\n                />\n                <FormControlLabel\n                    value=\"2\"\n                    control={<Radio color=\"primary\" />}\n                    label=\"2\"\n                    labelPlacement=\"top\"\n                    onChange={handleChange}\n                />\n            </RadioGroup>\n        </FormControl>\n    )\n}\n","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Region.js",["79"],"import React, {useState} from 'react';\nimport postCodeAreas from '../postcode-areas';\n\nexport default function Region(props) {\n\n    const [postCode, setPostCode] = useState(null)\n    const [region, setRegion] = useState(\"Cambridge\")\n\n    function handleChange(event) {\n        const value = event.target.value;\n        setPostCode(value);\n        postCodeAreas.forEach( obj => {\n            if (value === obj.postcodeArea) {\n                setRegion(obj.region)\n                props.endValue(obj.region);\n            } \n        })\n    }\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                value={postCode}\n                onChange={handleChange}\n                className=\"postcode\"\n            />\n        </div>\n    )\n}\n","/Users/jyequanteh/Projects/covid-stats/front-end/src/postcode-areas.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/critical_care_occupancy.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/VacGraph.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":4,"column":8,"nodeType":"86","messageId":"87","endLine":4,"endColumn":19},{"ruleId":"84","severity":1,"message":"88","line":1,"column":16,"nodeType":"86","messageId":"87","endLine":1,"endColumn":24},{"ruleId":"84","severity":1,"message":"89","line":1,"column":26,"nodeType":"86","messageId":"87","endLine":1,"endColumn":35},{"ruleId":"84","severity":1,"message":"88","line":1,"column":16,"nodeType":"86","messageId":"87","endLine":1,"endColumn":24},{"ruleId":"84","severity":1,"message":"89","line":1,"column":26,"nodeType":"86","messageId":"87","endLine":1,"endColumn":35},{"ruleId":"84","severity":1,"message":"90","line":6,"column":8,"nodeType":"86","messageId":"87","endLine":6,"endColumn":17},{"ruleId":"84","severity":1,"message":"91","line":11,"column":12,"nodeType":"86","messageId":"87","endLine":11,"endColumn":25},{"ruleId":"84","severity":1,"message":"92","line":7,"column":12,"nodeType":"86","messageId":"87","endLine":7,"endColumn":18},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'LatestCovid' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'FormLabel' is defined but never used.","'selectedValue' is assigned a value but never used.","'region' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]