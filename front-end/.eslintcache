[{"/Users/jyequanteh/Projects/covid-stats/front-end/src/index.js":"1","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/App.js":"2","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Header.js":"3","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Footer.js":"4","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/LatestCovid.js":"5","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Panel.js":"6","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/VacRate.js":"7","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/InfRate.js":"8","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Hospital.js":"9"},{"size":423,"mtime":1611406847533,"results":"10","hashOfConfig":"11"},{"size":748,"mtime":1611421732524,"results":"12","hashOfConfig":"11"},{"size":870,"mtime":1611421621520,"results":"13","hashOfConfig":"11"},{"size":205,"mtime":1611407821960,"results":"14","hashOfConfig":"11"},{"size":1633,"mtime":1611413946595,"results":"15","hashOfConfig":"11"},{"size":134,"mtime":1611418184190,"results":"16","hashOfConfig":"11"},{"size":434,"mtime":1611419000841,"results":"17","hashOfConfig":"11"},{"size":341,"mtime":1611419505202,"results":"18","hashOfConfig":"11"},{"size":539,"mtime":1611419659734,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"psl7se",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/jyequanteh/Projects/covid-stats/front-end/src/index.js",[],["40","41"],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/App.js",["42"],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Header.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Footer.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/LatestCovid.js",["43","44"],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios';\n\nexport default function LatestCovid() {\n\n    const getData = async ( queries ) => {\n        const endpoint = 'https://api.coronavirus.data.gov.uk/v1/data';\n        const { data, status, statusText } = await axios.get(endpoint, { \n            params: queries,\n            timeout: 10000 \n        });\n        if ( status >= 400 )\n            throw new Error(statusText);\n        return data\n    };  // getData\n    \n    \n    const latestCovid = async () => {\n        const\n            AreaType = \"nation\",\n            AreaName = \"england\";\n        const\n            filters = [\n                `areaType=${ AreaType }`,\n                `areaName=${ AreaName }`\n            ],\n            structure = {\n                date: \"date\",\n                name: \"areaName\",\n                code: \"areaCode\",\n                cases: {\n                    new: \"newCasesByPublishDate\",\n                    cumulative: \"cumCasesByPublishDate\"\n                },\n                deaths: {\n                    new: \"newDeathsByDeathDate\",\n                    cumulative: \"cumDeathsByDeathDate\"\n                }\n            };\n        const\n            apiParams = {\n                filters: filters.join(\";\"),\n                structure: JSON.stringify(structure),\n            };\n    \n        const result = await getData(apiParams);\n    \n        const latestResult = result[\"data\"][1];\n    \n        console.log(JSON.stringify(latestResult));\n    \n    };  // main\n\n    return (\n        <div>\n            <button onClick={latestCovid}>Fetch</button>\n\n        </div>\n    )\n}\n","/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Panel.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/VacRate.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/InfRate.js",[],"/Users/jyequanteh/Projects/covid-stats/front-end/src/components/Hospital.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":4,"column":8,"nodeType":"51","messageId":"52","endLine":4,"endColumn":19},{"ruleId":"49","severity":1,"message":"53","line":1,"column":16,"nodeType":"51","messageId":"52","endLine":1,"endColumn":24},{"ruleId":"49","severity":1,"message":"54","line":1,"column":26,"nodeType":"51","messageId":"52","endLine":1,"endColumn":35},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'LatestCovid' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]